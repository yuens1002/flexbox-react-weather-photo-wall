{"version":3,"sources":["themes/constants.js","themes/colorPalette.js","themes/index.js","components/Card/Card.js","reducers/WeatherCard/index.js","reducers/App/index.js","components/WeatherCard/WeatherCard.js","components/WeatherGrid/WeatherGrid.js","API/openWeather.js","API/unsplashAPI.js","API/openGEOcode.js","components/Query/Query.js","hooks/useRandomPic.js","components/Background/Background.js","globalStyles.js","components/ThemeToggle/ThemeToggle.js","App.js","reportWebVitals.js","index.js"],"names":["PRIMARY","SECONDARY","TERTIARY","LIGHT","DARK","colors","background","color","placeholder","link","visited","hover","highlight","randomHighlight","theme","names","Object","keys","max","length","randomizedNumber","Math","floor","random","toRGBSpec","colorArr","transparancy","buildTheme","StyledC","styled","div","Card","cardData","user","urls","description","temp","name","summary","state","cardStyle","style","className","src","regular","alt","target","rel","href","username","reducer","action","type","cardSize","window","getComputedStyle","gridItem","current","width","size","Number","slice","flexFlow","defaultStyles","maxWidth","display","alignItems","justifyContent","weatherData","payload","containerStyle","bgStyle","backgroundImage","image","backgroundSize","console","log","currentTheme","WeatherCard","props","useRef","initialState","useReducer","WeatherCardReducer","dispatch","useLayoutEffect","updateCardSize","addEventListener","removeEventListener","useEffect","ref","WeatherGrid","map","data","i","id","url","apiKey","process","getWeather","city","a","axios","api","createApi","accessKey","options","orientation","per_page","getPhotos","query","search","then","res","Error","errors","response","results","catch","e","getGeoLocation","lat","lng","info","statuscode","message","StyledQ","form","memo","updateWeatherData","queryInput","useState","placeholderText","setPlaceholderText","event","preventDefault","location","value","trim","theWeather","notFound","weather","main","coord","lon","geoData","locations","adminArea3","imgSrc","icon","onSubmit","autoComplete","title","useGetRandomPic","useQuery","photos","getRandom","refetchInterval","refetchOnWindowFocus","onSuccess","onError","err","error","isError","refetch","StyledBg","Background","children","GlobalStyles","createGlobalStyle","focus","StyledThemeT","updateCurrentTheme","updateTheme","handleThemeToggle","refetchBgImage","toggleThemeSelection","onClick","randomizedTheme","themes","randomTheme","withThemeInitialState","App","AppReducer","useCallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client","initialIsOpen","document","getElementById"],"mappings":"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","file":"static/js/main.829b70d0.chunk.js","sourcesContent":["const PRIMARY = 'primary';\nconst SECONDARY = 'secondary';\nconst TERTIARY = 'tertiary';\nconst LIGHT = 'white';\nconst DARK = 'black';\n\nexport { PRIMARY, SECONDARY, TERTIARY, LIGHT, DARK };\n","import { PRIMARY, SECONDARY, TERTIARY, LIGHT, DARK } from './constants';\n\n/**\n * colors are indicated by an array representating the 3# from rgb\n * decimals are transparancy levels in a rgba value\n */\n\nconst colors = {\n  [LIGHT]: {\n    background: [255, 255, 255],\n    color: [7, 7, 7],\n    placeholder: 0.6,\n    link: {\n      link: 0.5,\n      visited: 0.3,\n      hover: 1,\n    },\n    highlight: {\n      [PRIMARY]: [144, 190, 109],\n      [SECONDARY]: [133, 255, 199],\n      [TERTIARY]: [247, 231, 51],\n      'light Cyan': [224, 251, 252],\n      'light Green': [124, 234, 156],\n      'Languid Lanvendor': [220, 207, 236],\n      'Bright Yellow Crayola': [252, 171, 16],\n    },\n  },\n  [DARK]: {\n    background: [0, 0, 0],\n    color: [224, 224, 224],\n    placeholder: 0.6,\n    link: {\n      link: 0.5,\n      visited: 0.3,\n      hover: 1,\n    },\n    highlight: {\n      [PRIMARY]: [129, 178, 154],\n      [SECONDARY]: [64, 188, 216],\n      [TERTIARY]: [144, 190, 109],\n      Denim: [46, 94, 170],\n      'English Violet': [89, 57, 89],\n      'Bule Munsell': [43, 158, 179],\n      'Red Sala': [248, 51, 60],\n    },\n  },\n};\n\nexport default colors;\n","import { LIGHT, DARK } from './constants';\nimport colors from './colorPalette';\n\nfunction randomHighlight(theme) {\n  const names = Object.keys(colors[theme].highlight);\n  const max = names.length - 1;\n  const min = 0;\n  const randomizedNumber = Math.floor(Math.random() * (max - min + 1) + min);\n  return colors[theme].highlight[names[randomizedNumber]];\n}\n\nexport function randomTheme() {\n  const themes = [LIGHT, DARK];\n  const max = themes.length - 1;\n  const min = 0;\n  const randomizedNumber = Math.floor(Math.random() * (max - min + 1) + min);\n  return themes[randomizedNumber];\n}\n\nexport function toRGBSpec(colorArr, transparancy) {\n  return transparancy\n    ? `rgba(${colorArr[0]}, ${colorArr[1]}, ${colorArr[2]}, ${transparancy})`\n    : `rgb(${colorArr[0]}, ${colorArr[1]}, ${colorArr[2]})`;\n}\n\nexport function buildTheme(theme) {\n  return {\n    ...colors[theme],\n    highlight: randomHighlight(theme),\n  };\n}\n","import styled from 'styled-components';\nimport { toRGBSpec } from '../../themes';\n\nconst StyledC = styled.div`\n  display: flex;\n  flex-flow: column wrap;\n  background-color: ${({ theme }) => toRGBSpec(theme.background, 0.85)};\n  height: 100%;\n\n  .card-img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n\n  .card-img-frame {\n    height: 240px;\n    min-width: calc(33% - 6px);\n  }\n\n  .card-body {\n    padding: 8px;\n    font-size: 1.6rem;\n    font-weight: 300;\n    width: 100%;\n  }\n\n  .card-body-header {\n    font-size: 2rem;\n    font-family: 'Pacifico', cursive;\n  }\n\n  .card-body-text-summary {\n    text-transform: capitalize;\n  }\n\n  .card-body-credits {\n    float: right;\n    font-size: 1rem;\n  }\n\n  .card-body-header::before {\n    content: '';\n    clear: both;\n    display: table;\n  }\n`;\n\nexport default function Card({\n  cardData: { user, urls, description, temp, name, summary, state },\n  cardStyle,\n}) {\n  return (\n    <StyledC style={cardStyle}>\n      <div className=\"card-img-frame\">\n        <img className=\"card-img\" src={urls.regular} alt={description} />\n      </div>\n      <div className=\"card-body\">\n        <div className=\"card-body-credits\">\n          <span>photo by </span>\n          <a\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            href={`https://unsplash.com/@${user.username}`}\n          >\n            {user.name}\n          </a>\n        </div>\n        <div className=\"card-body-header\">\n          {name}, {state}\n        </div>\n        <div className=\"card-body-text\">\n          <span className=\"card-body-text-summary\">{summary}</span>, {temp}&deg;\n          C\n        </div>\n      </div>\n    </StyledC>\n  );\n}\n","const getStyles = (size) => {\n  return Number(size.slice(0, -2)) > 534 ? { flexFlow: 'row nowrap' } : {};\n};\n\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case 'updateCardSize':\n      return {\n        ...state,\n        cardSize: window.getComputedStyle(state.gridItem.current).width,\n      };\n    case 'updateCardStyle':\n      return { ...state, cardStyle: getStyles(state.cardSize) };\n    default:\n      return state;\n  }\n}\n","import { buildTheme } from '../../themes';\n\nconst defaultStyles = {\n  maxWidth: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-around',\n};\n\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case 'updateWeatherData':\n      // console.log('updateWeatherData called', action.payload);\n      return {\n        ...state,\n        weatherData: [action.payload, ...state.weatherData],\n      };\n    case 'updateContainerStyle':\n      // console.log('dispatch: updating container style', state);\n      return {\n        ...state,\n        containerStyle: state.weatherData.length ? {} : defaultStyles,\n      };\n    case 'updateBgStyle':\n      // console.log('dispatch: updateBgStyle called');\n      return {\n        ...state,\n        bgStyle: {\n          backgroundImage: `url(${state.image.urls.regular})`,\n          backgroundSize: 'cover',\n        },\n      };\n    case 'updateImage':\n      console.log('updateImage action called');\n      return { ...state, image: action.payload };\n    case 'updateCurrentTheme':\n      return { ...state, currentTheme: action.payload };\n    case 'updateTheme':\n      return { ...state, theme: buildTheme(state.currentTheme) };\n    default:\n      return state;\n  }\n}\n","import React, { useReducer, useLayoutEffect, useEffect, useRef } from 'react';\nimport Card from '../Card/Card';\nimport './WeatherCard.css';\nimport { WeatherCardReducer } from '../../reducers';\n\nexport default function WeatherCard(props) {\n  const gridItem = useRef(0);\n  const initialState = { cardStyle: {}, cardSize: '', gridItem };\n  const [state, dispatch] = useReducer(WeatherCardReducer, initialState);\n\n  // watch for screen resize to update card size\n  useLayoutEffect(() => {\n    function updateCardSize() {\n      dispatch({ type: 'updateCardSize' });\n    }\n    window.addEventListener('resize', updateCardSize);\n    return () => window.removeEventListener('resize', updateCardSize);\n  }, []);\n\n  // adjusts for the layout of the card when a new card is added\n  useEffect(() => {\n    dispatch({ type: 'updateCardSize' });\n    dispatch({ type: 'updateCardStyle' });\n  }, [state.cardSize]);\n\n  return (\n    <div className=\"grid-item\" ref={gridItem}>\n      <Card {...props} cardStyle={state.cardStyle} />\n    </div>\n  );\n}\n","import WeatherCard from '../WeatherCard/WeatherCard';\nimport './WeatherGrid.css';\n\nexport default function WeatherGrid({ weatherData }) {\n  return (\n    <div className='grid-row'>\n      {weatherData.map((data, i) => (\n        <WeatherCard key={data.id + i} cardData={data} />\n      ))}\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst url = 'https://api.openweathermap.org/data/2.5/weather';\nconst apiKey = process.env['REACT_APP_OW_API_KEY'];\n\nexport async function getWeather(city) {\n  // console.log('🚀 ~ file: openWeather.js ~ line 7 ~ getWeather ~ city', city);\n  try {\n    const { data } = await axios(\n      `${url}?q=${city}&appid=${apiKey}&units=metric`\n    );\n    // console.log(data);\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n}\n","import { createApi } from 'unsplash-js';\n\nconst accessKey = process.env['REACT_APP_UPSPLASH_ACCESS_TOKEN'];\n\nconst api = createApi({ accessKey });\nlet options = { orientation: 'landscape', per_page: 1 };\nexport function getPhotos(query) {\n  // console.log('api called');\n  options = { ...options, query };\n  return api.search\n    .getPhotos(options)\n    .then((res) => {\n      // the api returns errors like an OK response\n      if (res.type === 'error') {\n        throw Error(res.errors[0]);\n      }\n      // console.log(res.response.results);\n      return res.response.results;\n    })\n    .catch((e) => console.log(e));\n}\n\nexport function getRandom(currentTheme) {\n  console.log(\n    '🚀 ~ file: unsplashAPI.js ~ line 24 ~ getRandom ~ currentTheme',\n    currentTheme\n  );\n  // error handling is being done on the useRandomPic hook\n  return api.photos\n    .getRandom({ query: `${currentTheme} background` })\n    .then((res) => res.response);\n}\n","import axios from 'axios';\n\nconst url = 'http://open.mapquestapi.com/geocoding/v1/reverse?';\nconst apiKey = process.env['REACT_APP_OPEN_GEOCODE_KEY'];\n\nexport async function getGeoLocation({ lat, lng }) {\n  try {\n    const { data } = await axios(`${url}key=${apiKey}&location=${lat}, ${lng}`);\n    if (data.info.statuscode !== 0) throw Error(data.info.message);\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n}\n","import { useState, memo, useRef } from 'react';\nimport { getWeather } from '../../API/openWeather';\nimport { getPhotos } from '../../API/unsplashAPI';\nimport { getGeoLocation } from '../../API/openGEOcode';\nimport styled from 'styled-components';\nimport { toRGBSpec } from '../../themes';\n\nconst StyledQ = styled.form`\n  padding: 0 12px;\n  display: inline-block;\n  .query-input {\n    font-size: 2rem;\n    text-align: center;\n    font-style: italic;\n    padding: 10px;\n    width: 250px;\n    background-color: ${({ theme }) => toRGBSpec(theme.highlight, 0.8)};\n    border: none;\n    margin: 10px auto;\n    transition: background-color 0.8s ease;\n    :focus {\n      background-color: ${({ theme }) =>\n        toRGBSpec(theme.highlight, theme.link.hover)};\n    }\n    ::placeholder {\n      color: ${({ theme }) => toRGBSpec(theme.color, theme.link.link)};\n    }\n  }\n`;\n\nexport default memo(function Query({ updateWeatherData }) {\n  console.log('rendering Query...');\n  const queryInput = useRef(null);\n  const [placeholderText, setPlaceholderText] = useState('(enter) a US city');\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const location = queryInput.current.value.trim();\n    queryInput.current.value = '';\n    setPlaceholderText('momento...');\n\n    const theWeather = (await getWeather(location)) || {};\n\n    const notFound = Object.keys(theWeather).length === 0;\n\n    notFound && setPlaceholderText('city not found!');\n    if (!notFound) {\n      setPlaceholderText(location);\n      const {\n        name,\n        weather,\n        main,\n        coord: { lat, lon: lng },\n      } = theWeather;\n\n      const geoData = await getGeoLocation({ lat, lng });\n\n      const { adminArea3: state } = geoData.results[0].locations[0];\n\n      getPhotos(`${name}, ${state} ${weather[0].description}`).then((res) => {\n        // console.log('🚀 ~ file: Query.js ~ line 39 ~ getPhotos ~ res', res);\n        const { user, urls, description, id } = res[0] || {};\n\n        updateWeatherData({\n          user,\n          urls,\n          description,\n          name,\n          id,\n          state,\n          temp: main.temp,\n          summary: weather[0].description,\n          imgSrc: `http://openweathermap.org/img/wn/${weather[0].icon}.png`,\n        });\n      });\n    }\n  }\n\n  return (\n    <StyledQ\n      id=\"query-form\"\n      onSubmit={handleSubmit}\n      className=\"query\"\n      autoComplete=\"off\"\n    >\n      <input\n        ref={queryInput}\n        title=\"query\"\n        placeholder={placeholderText}\n        className=\"query-input\"\n        type=\"text\"\n      />\n    </StyledQ>\n  );\n});\n","import { useQuery } from 'react-query';\nimport { getRandom } from '../API/unsplashAPI';\n\nexport default function useGetRandomPic({ dispatch, currentTheme }) {\n  console.log(\n    '🚀 ~ file: useRandomPic.js ~ line 5 ~ useGetRandomPic ~ currentTheme',\n    currentTheme\n  );\n  const { error, isError, refetch } = useQuery(\n    // this is too good, wish i had known about this earlier...\n    ['getRandomPic', currentTheme],\n    () => getRandom(currentTheme),\n    {\n      refetchInterval: 180000,\n      refetchOnWindowFocus: false,\n      onSuccess: (data) => {\n        const { urls, user } = data;\n        dispatch({ type: 'updateImage', payload: { urls, user } });\n        dispatch({ type: 'updateBgStyle' });\n      },\n      onError: (err) => {\n        console.log('error from useRandomPic hook: ', err);\n      },\n    }\n  );\n  return { error, isError, refetch };\n}\n","import styled from 'styled-components';\nimport { toRGBSpec } from '../../themes';\n\nconst StyledBg = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background-color: ${(props) => toRGBSpec(props.theme.background, 0.40)};\n  }\n`;\n\nexport default function Background(props) {\n  return <StyledBg {...props}>{props.children}</StyledBg>;\n}\n","import { createGlobalStyle } from 'styled-components';\nimport { toRGBSpec } from './themes';\n\nconst GlobalStyles = createGlobalStyle`\n*, *::before, *::after {\n  box-sizing: border-box;\n}\n\nhtml {\n  font-size: 10px;\n  color: ${(props) => toRGBSpec(props.theme.color)};\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: 'Open Sans', sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\na:link {\n  color: ${(props) => toRGBSpec(props.theme.color)};\n  text-decoration: none;\n  padding: 0 4px;\n  transition: background-color 0.5s ease;\n  background-color: ${(props) =>\n    toRGBSpec(props.theme.highlight, props.theme.link.link)};\n}\n\na:visited {\n  color: ${(props) => toRGBSpec(props.theme.color)};\n}\n\na:hover {\n  background-color: ${(props) =>\n    toRGBSpec(props.theme.highlight, props.theme.link.hover)};\n}\n\na:focus {\n  background-color: ${(props) =>\n    toRGBSpec(props.theme.highlight, props.theme.link.focus)};\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n`;\n\nexport default GlobalStyles;\n","import { memo } from 'react';\n\nimport { toRGBSpec } from '../../themes';\nimport styled from 'styled-components';\nimport { LIGHT, DARK } from '../../themes/constants';\n\nconst StyledThemeT = styled.div`\n  position: absolute;\n  top: 8px;\n  right: 16px;\n  display: flex;\n  justifiy-content: space-between;\n  width: 124px;\n  align-items: center;\n\n  .circle {\n    cursor: pointer;\n    width: 24px;\n    height: 24px;\n    border-radius: 50%;\n    margin: 4px;\n  }\n  .circle--dark {\n    background-color: rgba(0, 0, 0, 0.8);\n    border: 2px solid rgba(255, 255, 255, 0.2);\n  }\n  .circle--light {\n    background-color: rgba(255, 255, 255, 0.8);\n    border: 2px solid rgba(0, 0, 0, 0.2);\n  }\n  .circle--selected {\n    border: 2px solid ${({ theme }) => toRGBSpec(theme.highlight)};\n  }\n`;\n\nexport default memo(function ThemeToggle({\n  updateCurrentTheme,\n  updateTheme,\n  currentTheme,\n  refetchBgImage,\n}) {\n  const handleThemeToggle = async (theme) => {\n    console.log('handleThemeToggle clicked');\n    if (theme !== currentTheme) {\n      updateCurrentTheme(theme);\n    }\n    updateTheme();\n  };\n\n  const toggleThemeSelection = (theme) => {\n    console.log('theme', theme);\n    console.log('currentTheme', currentTheme);\n    return currentTheme === theme ? ' circle--selected' : '';\n  };\n\n  return (\n    <StyledThemeT>\n      <span>Choose a Theme: </span>\n      <div\n        className={`circle circle--dark${toggleThemeSelection(DARK)}`}\n        aria-label=\"dark theme, hit enter to select\"\n        onClick={() => handleThemeToggle(DARK)}\n      />\n      <div\n        className={`circle circle--light${toggleThemeSelection(LIGHT)}`}\n        aria-label=\"light theme, hit enter to select\"\n        onClick={() => handleThemeToggle(LIGHT)}\n      />\n    </StyledThemeT>\n  );\n});\n","import { useEffect, useReducer, useCallback } from 'react';\nimport './App.css';\nimport WeatherGrid from './components/WeatherGrid/WeatherGrid';\nimport Query from './components/Query/Query';\nimport { AppReducer } from './reducers';\nimport useGetRandomPic from './hooks/useRandomPic';\nimport { buildTheme, randomTheme } from './themes';\nimport { ThemeProvider } from 'styled-components';\nimport Background from './components/Background/Background';\nimport GlobalStyles from './globalStyles';\nimport ThemeToggle from './components/ThemeToggle/ThemeToggle';\n\nconst initialState = {\n  weatherData: [],\n  containerStyle: {},\n  image: {\n    urls: {},\n    user: {},\n  },\n  bgStyle: {},\n};\n\nconst randomizedTheme = randomTheme();\n\nconst withThemeInitialState = {\n  ...initialState,\n  currentTheme: randomizedTheme,\n  theme: buildTheme(randomizedTheme),\n};\n\nfunction App() {\n  console.log('rendering app...');\n\n  const [\n    { weatherData, containerStyle, image, bgStyle, theme, currentTheme },\n    dispatch,\n  ] = useReducer(AppReducer, withThemeInitialState);\n\n  // may consider have a data variable from useGetRandomPic for ease of testing\n  const { isError, error, refetch } = useGetRandomPic({\n    dispatch,\n    currentTheme,\n  });\n\n  const updateWeatherData = useCallback((payload) => {\n    dispatch({ type: 'updateWeatherData', payload });\n  }, []);\n\n  const updateCurrentTheme = useCallback((payload) => {\n    dispatch({ type: 'updateCurrentTheme', payload });\n  }, []);\n\n  const updateTheme = useCallback(() => {\n    dispatch({ type: 'updateTheme' });\n  }, []);\n\n  useEffect(() => {\n    // console.log('inside useEffect dispatch updateContainerStyle', weatherData);\n    weatherData.length <= 1 && dispatch({ type: 'updateContainerStyle' });\n  }, [weatherData.length]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <>\n        <GlobalStyles />\n        <Background style={bgStyle}>\n          <div className=\"container\" style={containerStyle}>\n            <div className=\"heading\">\n              <div>The weather in</div>\n              <div>\n                <Query updateWeatherData={updateWeatherData} />\n              </div>\n              <div>is like?</div>\n            </div>\n            {weatherData.length > 0 && (\n              <WeatherGrid weatherData={weatherData} />\n            )}\n          </div>\n          <div className=\"credits\">\n            {isError && <span>{error.message}</span>}\n            {Object.keys(image.urls).length > 0 && (\n              <>\n                <span>BG photo by </span>\n                <a\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  href={`https://unsplash.com/@${image.user.username}`}\n                >\n                  {image.user.name}\n                </a>\n              </>\n            )}\n          </div>\n          <ThemeToggle\n            updateCurrentTheme={updateCurrentTheme}\n            updateTheme={updateTheme}\n            currentTheme={currentTheme}\n            refetchBgImage={refetch}\n          />\n        </Background>\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { QueryClientProvider, QueryClient } from 'react-query';\nimport { ReactQueryDevtools } from 'react-query/devtools';\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n      <ReactQueryDevtools initialIsOpen={false} />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}